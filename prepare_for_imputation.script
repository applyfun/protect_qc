### Prepare genotype files for imputation
### R ARATHIMOS
### 07/04/2020

# Accepted Input: VCF files compressed by bgzip (*.vcf.gz).
# eg. plink --ped mystudy_chr1.ped --map mystudy_chr1.map --recode vcf --out mystudy_chr1
# Create a sorted *.vcf.gz file using VCFtools and tabix (including bgzip):
# vcf-sort mystudy_chr1.vcf | bgzip -c > mystudy_chr1.vcf.gz

############## NOTES #################
# Create a seperate vcf.gz file for each chromosome.
# Variations must be sorted by genomic position (see above)
# GRCh37 coordinates are required
# Several *.vcf.gz files can be uploaded at once
# Can use checkVCF to ensure that the VCF files are valid. checkVCF proposes "Action Items" (e.g. upload to sftp server), which can be ignored. Only the validity should be checked
#######################################

cd ./brc_scratch/output/protect_qc/imputation/

printf "/users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3
/users/k1815780/brc_scratch/output/protect_qc/merged_uk_protect_TEC.filtered" > 1000g_TEC_merge.list

plink --merge-list 1000g_TEC_merge.list --flip-scan --make-bed --out merged_1000g_TEC ;

#http://mccarthy.well.ox.ac.uk/chipendium/ui/
#No Chips Found above threshold, overlap is 90.40% to best match: GSAMD-24v2-0_20024620_A1

#dcgn = DeCodeGenetics_V1_20012591_A1 chip
#693143 variants
#3956 people (1158 males, 2777 females, 21 ambiguous)
#Total genotyping rate is 0.983327
#693143 variants and 3956 people pass filters and QC

#ioe24 = InfiniumOmniExpress-24v1-2_A1 chip
#712628 variants
#5 people (2 males, 3 females)
#Total genotyping rate is 0.99304
#712628 variants and 5 people pass filters and QC

#--------------------First, liftover to GRCh37

cd ./imputation

#strand alignment step - can't complete because no chip aligment files exist for that array

#~/brc_scratch/software/update_build.sh $root.filtered.nozero ~/brc_scratch/data/pelotas_adhd/GSA-24v2-0_A1-b38-strand/GSA-24v2-0_A1-b38.strand $root.filtered.nozero.strand.aligned
#update_build.sh <bed-file-stem> <strand-file> <output-file-stem>

cd ~/brc_scratch/output/protect_qc/

#convert to ped/map
plink \
--bfile merged_uk_protect_TEC.filtered \
--recode \
--tab \
--out merged_uk_protect_TEC.filtered.forliftover

#replace chrom 23 with X and 24 with Y in first column of bim file
##awk '{gsub("23","X",$1)}1' $root.filtered.forliftover.map >  $root.filtered.forliftover.x.map
##awk '{gsub("24","Y",$1)}1' $root.filtered.forliftover.x.map >  $root.filtered.forliftover.xy.map

#check
##awk -F ' ' '{freq[$1]++} END{for (i in freq) print freq[i], i}' $root.filtered.forliftover.xy.map

##mv $root.filtered.forliftover.xy.map $root.filtered.forliftover.map

#lift
module load devtools/python/3.7.2

python ~/brc_scratch/software/liftOverPlink-master/liftOverPlink.py --bin ~/brc_scratch/software/liftOver_updated --map merged_uk_protect_TEC.filtered.forliftover.map --out filtered.forliftover_lifted --chain ~/brc_scratch/software/hg38ToHg19.over.chain.gz

#remove bad lifted snps, generate good ped snd combine fixed ped with fixed map
awk '{print $2}' filtered.forliftover_lifted.map > keep_snps.txt

# Note: this will clobber the lifted MAP file generated by `liftOverPlink`:
plink --file merged_uk_protect_TEC.filtered.forliftover --recode --out filtered.forliftover_good_lifted2 --extract keep_snps.txt 
plink --map filtered.forliftover_lifted.map --ped filtered.forliftover_good_lifted2.ped --make-bed --out final

plink --bfile final --make-bed --maf 0.000001 --out all_liftover_converted_TEC

#check XY chroms retained
awk -F ' ' '{freq[$1]++} END{for (i in freq) print freq[i], i}' all_liftover_converted.bim

#tidy 
rm filtered.forliftover_lifted.map
rm final.bed
rm final.bim
rm final.fam
rm filtered.forliftover_good_lifted2.map
rm filtered.forliftover_good_lifted2.ped

##check if will merge with 1000g again
cd ./brc_scratch/output/protect_qc/imputation/

printf "/users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3
/users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC" > 1000g_TEC_merge.list

plink --merge-list 1000g_TEC_merge.list --make-bed --out merged_1000g_TEC ;

plink --bfile /users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3 --exclude merged_1000g_TEC-merge.missnp --make-bed --out /users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3_exclusions

#retry merge
printf "/users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3_exclusions
/users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC" > 1000g_TEC_merge.list

plink --merge-list 1000g_TEC_merge.list --make-bed --out merged_1000g_TEC ;

#many snps have GSA prefix in the TEC data, manually edit bim file
sed -i 's/GSA-//g' /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC.bim
head /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC.bim

#try again

plink --merge-list 1000g_TEC_merge.list --make-bed --out merged_1000g_TEC ;

#alleles with 3+ variants present - drop from both files

plink \
--bfile /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC \
--exclude /users/k1815780/brc_scratch/output/protect_qc/imputation/merged_1000g_TEC-merge.missnp \
--make-bed \
--out /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC_exclusions

#retry
cd ./brc_scratch/output/protect_qc/imputation/

printf "/users/k1815780/brc_scratch/data/get_1000g/merged_1000g_maf0001_phase3_exclusions
/users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC_exclusions" > 1000g_TEC_merge.list

plink --merge-list 1000g_TEC_merge.list --make-bed --out merged_1000g_TEC ;

#check using mccarthy HRC bim check

#create freq file first
plink \
--freq \
--bfile /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC_exclusions \
--out /users/k1815780/brc_scratch/output/protect_qc/freq_for_check

#Usage: perl HRC-1000G-check-bim.pl -b <bim file> -f <Frequency file> -r <Reference panel> -g -p <population>

perl HRC-1000G-check-bim.pl -b /users/k1815780/brc_scratch/output/protect_qc/all_liftover_converted_TEC_exclusions.bim -f /users/k1815780/brc_scratch/output/protect_qc/freq_for_check.frq -r 1000GP_Phase3_combined.legend -g 


#--------------------Second, split by chromosome number
cd ~/brc_scratch/output/protect_qc/

for chr in {1..24} ; do
 plink --bfile all_liftover_converted_TEC_exclusions --chr $chr --make-bed --out all_liftover_converted_TEC_chrom$chr
done

ls 

#check what chromosome numbers exist in original bim
#awk -F ' ' '{freq[$1]++} END{for (i in freq) print freq[i], i}' $root.filtered.bim

#awk -F ' ' '{freq[$1]++} END{for (i in freq) print freq[i], i}' all_liftover_converted.bim

#awk -F ' ' '{freq[$1]++} END{for (i in freq) print freq[i], i}' $root.filtered.forliftover.map


#--------------------Third, convert to ped/map and sort/compress with bgzip and tabix after conversion to vcf

#convert to ped and map
for chr in {1..24} ; do
	plink \
	--bfile all_liftover_converted_TEC_chrom$chr \
	--recode \
	--tab \
	--out liftover_converted_preimputed1.chrom$chr
done

ls

#change to x y from 23/24 chrom
##awk '{gsub("23","X",$1)}1' liftover_converted_preimputed1.chrom23.map >  liftover_converted_preimputed1.chromX.map
##awk '{gsub("24","Y",$1)}1' liftover_converted_preimputed1.chrom24.map >  liftover_converted_preimputed1.chromY.map

##mv liftover_converted_preimputed1.chrom23.ped liftover_converted_preimputed1.chromX.ped
##mv liftover_converted_preimputed1.chrom24.ped liftover_converted_preimputed1.chromY.ped

### add 'chr' to chromosome number in file

for chr in {1..24}; do

	sed 's/^/chr/' liftover_converted_preimputed1.chrom$chr.map > temp_liftover_converted_preimputed1.chrom$chr.map
	mv temp_liftover_converted_preimputed1.chrom$chr.map liftover_converted_preimputed1.chrom$chr.map

done

#check
head liftover_converted_preimputed1.chrom13.map
head liftover_converted_preimputed1.chrom23.map
head liftover_converted_preimputed1.chrom24.map

#convert to vcf

for chr in {1..24}; do
 plink --ped liftover_converted_preimputed1.chrom$chr.ped --map liftover_converted_preimputed1.chrom$chr.map --recode vcf --out liftover_converted_preimputed2.chrom$chr
done

ls

#check
head liftover_converted_preimputed2.chrom23.vcf
head liftover_converted_preimputed2.chrom3.vcf

#re-edit vcf to chr col name 
#for numx in {1..24}; do

# awk -v I=$numx '{ if ($1 =='$numx') $1="chr"'$numx' ;}1 ' OFS='\t' liftover_converted_preimputed2.chrom$numx.vcf > liftover_converted_preimputed3.chrom$numx.vcf

#done
 
#check
awk '{print $1}' liftover_converted_preimputed2.chrom8.vcf > TEST_FILE.txt
head TEST_FILE.txt
head liftover_converted_preimputed2.chrom23.vcf
head liftover_converted_preimputed2.chrom24.vcf

#sorting vcf and convert to bgzip after  
module load apps/samtools/1.9.0-singularity

for chr in {1..24}; do
 /scratch/groups/ukbiobank/KCL_Data/Software/vcftools/vcftools/src/perl/vcf-sort liftover_converted_preimputed2.chrom$chr.vcf | /users/k1815780/brc_scratch/software/tabix-0.2.6/bgzip -c > liftover_converted_preimputed_final.chrom$chr.vcf.gz
done

ls 

#new way
#for chr in {1..24}; do

# /scratch/groups/ukbiobank/KCL_Data/Software/vcftools/vcftools/src/perl/vcf-sort liftover_converted_preimputed3.chrom$chr.vcf | /scratch/groups/ukbiobank/KCL_Data/Software/bcftools-1.8/bcftools view -Oz -o > liftover_converted_preimputed_final.chrom$chr.vcf.gz

#done

# bcftools view -Oz -o 
# /scratch/groups/ukbiobank/KCL_Data/Software/vcftools/vcftools/src/perl/vcf-sort liftover_converted_preimputed3.chrom12.vcf | /scratch/groups/ukbiobank/KCL_Data/Software/bcftools-1.8/bcftools view -Oz -o > liftover_converted_preimputed_final.chrom12.vcf.gz

#---------------------Fourth, use checkVCF to ensure VCF files are valid

##cd ~/brc_scratch/software
##tar -zxvf checkVCF-20140116.tar.gz

#change to execute permissions
##chmod +x checkVCF.py

# eg.  checkVCF.py -r human_g1k_v37.fasta -o out mystudy_chr1.vcf.gz

##cd ~/brc_scratch/data/pelotas_adhd/imputation

#quick check - THIS USES VERSION 37 OF THE HUMAN GENOME
##for chr in {1..24}; do

##	~/brc_scratch/software/checkVCF.py -r ~/brc_scratch/software/hs37d5.fa -o out liftover_converted_preimputed2.chrom$chr.vcf.gz

##done

#create directory with all required files for upload
mkdir upload

##cp out.check.log ./upload
##cp out.check.dup  ./upload
##cp out.check.nonSnp  ./upload
##cp out.check.ref  ./upload
##cp out.check.geno  ./upload
##cp out.check.af  ./upload
##cp out.check.mono ./upload

for chr in {1..24}; do
	cp liftover_converted_preimputed_final.chrom$chr.vcf.gz ./upload
	mv ./upload/liftover_converted_preimputed_final.chrom$chr.vcf.gz ./upload/converted_preimputed.chr$chr.vcf.gz
done


#direct upload to website

#####################################################################################################################################################################

#exclude variants that the imputation server flagged as requiring removal

#convert list of the imputation server postions to variants IDs, rsids, to exclude from genotype files

cd ~/brc_scratch/output/protect_qc/imputation/

#create file with chr:pos not rsid from bim
awk '{print $1":"$4, $0}' merged_1000g_TEC.bim > tmp.tmp

cd ~/brc_scratch/data/protect_qc/imputation

#delete first line of file
sed '1d' snps-excluded.txt > tmp.txt
awk -F":" '$1=$1' OFS="\t"  tmp.txt > tmp2.txt
awk '{print $1":"$2}' tmp2.txt > pos_to_exclude.txt

wc -l pos_to_exclude.txt

#find overlap
grep -w -F -f pos_to_exclude.txt ~/brc_scratch/output/protect_qc/imputation/tmp.tmp > newdata_tmp.txt

wc -l newdata_tmp.txt

#create plain exclusions list of variants for plink
awk '{print $3}' newdata_tmp.txt > exclusion_list_imputation_server_rsids.txt

#for chr in {1..22} ; do
#awk '{print>$1}' 
#done

rm tmp.txt
rm tmp2.txt
rm pos_to_exclude.txt
rm newdata_tmp.txt

cd ~/brc_scratch/output/protect_qc/imputation/

for chr in {1..22} ; do

#exclude from genotype files using plink
	plink \
	--bfile ./upload/converted_preimputed.chr$chr.vcf.gz \
	--exclude ~/brc_scratch/data/protect_qc/imputation/exclusion_list_imputation_server_rsids.txt \
	--make-bed \
	--out .post_exclusions_converted_preimputed.chr$chr.vcf.gz

done

#####################################################################################################################################

#convert to ped and map
for chr in {1..24} ; do
	plink \
	--bfile all_liftover_converted_TEC_chrom$chr \
	--exclude ~/brc_scratch/data/protect_qc/imputation/exclusion_list_imputation_server_rsids.txt \
	--recode \
	--tab \
	--out liftover_converted_preimputed1.chrom$chr.2
done

for chr in {1..24}; do

	sed 's/^/chr/' liftover_converted_preimputed1.chrom$chr.2.map > temp_liftover_converted_preimputed1.chrom$chr.map
	mv temp_liftover_converted_preimputed1.chrom$chr.map liftover_converted_preimputed1.chrom$chr.2.map

done

#check
head liftover_converted_preimputed1.chrom13.2.map

#convert to vcf

for chr in {1..24}; do
 plink --ped liftover_converted_preimputed1.chrom$chr.2.ped --map liftover_converted_preimputed1.chrom$chr.2.map --recode vcf --out liftover_converted_preimputed2.chrom$chr.2
done

head liftover_converted_preimputed2.chrom3.2.vcf

#check
awk '{print $1}' liftover_converted_preimputed2.chrom8.2.vcf > TEST_FILE.txt
head TEST_FILE.txt
rm TEST_FILE*

#sorting vcf and convert to bgzip after  
module load apps/samtools/1.9.0-singularity

for chr in {1..22}; do
 /scratch/groups/ukbiobank/KCL_Data/Software/vcftools/vcftools/src/perl/vcf-sort liftover_converted_preimputed2.chrom$chr.2.vcf | /users/k1815780/brc_scratch/software/tabix-0.2.6/bgzip -c > liftover_converted_preimputed_final.chrom$chr.2.vcf.gz
done

#create directory with all required files for upload
mkdir upload

for chr in {1..22}; do
	cp liftover_converted_preimputed_final.chrom$chr.2.vcf.gz ./upload
	mv ./upload/liftover_converted_preimputed_final.chrom$chr.2.vcf.gz ./upload/converted_preimputed.chr$chr.vcf.gz
done


#reupload to server


###########################################################
###########################################################

